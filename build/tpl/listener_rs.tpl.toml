
[info]

imports = [
  "std::sync::Arc",
  "rtdlib::types as td_types",
  "crate::types as tg_types",
  "crate::api::Api",
]

comment_listener = "Telegram client event listener"
comment_lout = "Get listener"


# tt: listen handle type
# mapper: map tdlib type
# comment: listenr comment

[lin]

receive = { tt = [ "Box<td_types::Object>" ], comment = "when receive data from tdlib" }

[lin.option]
mapper = "updateOption"
tt = [ "tg_types::TGUpdateOption" ]
comment = "An option changed its value."

[lin.authorization_state]
mapper = "updateAuthorizationState"
tt = [ "tg_types::TGAuthorizationState" ]
comment = "The user authorization state has changed."

[lin.connection_state]
mapper = "updateConnectionState"
tt = [ "tg_types::TGUpdateConnectionState" ]
comment = "The connection state has changed."

[lin.error]
mapper = "error"
tt = [ "td_types:Error" ]
comment = "An object of this type can be returned on every function call, in case of an error."






